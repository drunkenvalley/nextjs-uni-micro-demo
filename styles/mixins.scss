@use "variables.scss" as *;

// Maybe slightly misleading name; this is mixins and functions.
// It just seems a bit contrived to separate them.

@mixin use-map ($map) {
    @each $name, $value in $map {
        &-#{$name} {
            @content($value);
        }
    }
}

@mixin media ($breakpoint) {
    @media (min-width: #{map-get($map: $breakpoints, $key: $breakpoint)}) {
        @content();
    }
}

@mixin all-media ($breakpoints-map: $breakpoints) {
    @content();

    @each $breakpoint, $width in $breakpoints-map {
        @media (min-width: #{$width}) {
            &-#{$breakpoint} {
                @content();
            }
        }
    }
}

@mixin all-directions ($property, $value, $directions-map: $directions, $prefix: "-", $suffix: "") {
    &#{$prefix}#{$suffix} {
        #{$property}: #{$value} !important;
    }

    @each $name, $direction in $directions-map {
        &#{$prefix}#{$name}#{$suffix} {
            #{$property}-#{$direction}: #{$value} !important;
        }
    }
}

@mixin all-spacing ($map, $property, $unit: "rem") {
    @each $name, $value in $map {
        @include all-directions($property, #{$value}#{$unit}, $prefix: "", $suffix: "-#{$name}");
    }
}

@mixin active {
    &:active, &:visited:active {
        @content();
    }
}

@mixin before {
    &::before {
        content: "";
        @content();
    }
}

@mixin hover {
    &:hover, &:focus, &:visited:hover, &:visited:focus {
        @content();
    }
}

@function get-color($color) {
    @return map-get($map: $colors, $key: $color);
}

@function get-size($multiplier, $unit: "rem") {
    $val: map-get($map: $spacing-multiplier, $key: $multiplier);
    @return #{$val}#{$unit};
}
